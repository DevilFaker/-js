js闭包
闭包是在某个作用域内定义的函数，它可以访问这个作用域内的所有变量。
js权威指南：函数对象可以通过作用链相互关联起来，函数体内部的变量都可以保存在函数体内。
js高程：指有权访问另一个函数作用域中变量的函数
捕捉到局部变量和参数并一直保存下来
作用链域是一个对象列表不是绑定的栈
js函数机制：每次创建函数，会创建一个执行环境和相应的作用链域，并把作用链域赋值给一个特殊的内部属性[Scope],使用this，arguments，其他命名参数初始化一个活动对象，外部函数的活动对象始终处于第二位，一个对象（添加到作用域）保存局部变量，当函数返回时，绑定变量的函数会被删除

当函数返回：
1.不存在嵌套函数或者没用引用指向这个对象 ---> 回收
2.嵌套函数的变量绑定对象在外部函数中保存下来 --->回收
3.函数定义了嵌套函数并将它作为返回值或者存储在某个属性里---> 有个外部引用指向这个嵌套函数，不会回收

在同一作用链定义了多个闭包，闭包共享同样的私有变量
关联到闭包作用链域都是活动的，嵌套的函数不会将作用域内的私有变量复制保存一份，也不会对所绑定的变量生成静态快照

this 是js的关键字，而不是变量

你不知道的js：
变量的赋值操作：
1>编译器会在当前作用域声明一个变量
2>运行时引擎会在作用域查找该变量
LHS找到容器本身，进行赋值操作
RHS得到它的值

严格模式：禁止自动或隐式创建全局变量

二维数组实现
四行三列：for(i=0;i<4（行数）;i++){var b=[];for(j=0;j<3（列数）;j++){b[j]=0;   }  a[i]=b;  }
多维再包一层for循环




